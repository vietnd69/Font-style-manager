/* Import fonts */
@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap");

/* Reset CSS */
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent;
}

body {
  min-height: 100vh;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
  margin: 0;
  font-family: "Roboto", sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: var(--figma-color-bg);
  color: var(--figma-color-text);
}

/* Remove default margin and styling */
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles */
ul,
ol {
  list-style: none;
  margin: 0;
  padding: 0;
}

/* Media elements */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/* Form elements */
input,
button,
textarea,
select {
  font: inherit;
  border: none;
  outline: none;
}

button {
  background: none;
  cursor: pointer;
}

/* Text elements */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/* Remove anchor text decoration */
a {
  text-decoration: none;
  color: inherit;
}

/* Existing styles */
code {
  font-family:
    source-code-pro, Menlo, Monaco, Consolas, "Courier New", monospace;
  color: var(--figma-color-text);
}
.react-select__control {
  border-radius: 0 !important;
  border: none !important;
  background-color: var(--figma-color-bg) !important;
}
.react-select__menu {
  z-index: 100 !important;
  background-color: var(--figma-color-bg) !important;
  color: var(--figma-color-text) !important;
}
.react-select__value-container {
  padding-left: 32px !important;
  color: var(--figma-color-text) !important;
}
#root {
  min-height: 100%;
  display: flex;
  background-color: var(--figma-color-bg);
}
@supports (-webkit-appearance: none) or (-moz-appearance: none) {
  input[type="checkbox"],
  input[type="radio"] {
    --active: var(--figma-color-bg-brand);
    --active-inner: var(--figma-color-text-on-brand);
    --focus: 2px var(--figma-color-border-brand-strong);
    --border: var(--figma-color-border);
    --border-hover: var(--figma-color-border-brand);
    --background: var(--figma-color-bg);
    --disabled: var(--figma-color-bg-disabled);
    --disabled-inner: var(--figma-color-bg-disabled-secondary);
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 16px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition:
      background 0.3s,
      border-color 0.3s,
      box-shadow 0.2s;
  }
  input[type="checkbox"]:after,
  input[type="radio"]:after {
    content: "";
    display: block;
    left: 0;
    top: 0;
    position: absolute;
    transition:
      transform var(--d-t, 0.3s) var(--d-t-e, ease),
      opacity var(--d-o, 0.2s);
  }
  input[type="checkbox"]:checked,
  input[type="radio"]:checked {
    --b: var(--active);
    --bc: var(--active);
    --d-o: 0.3s;
    --d-t: 0.6s;
    --d-t-e: cubic-bezier(0.2, 0.85, 0.32, 1.2);
  }
  input[type="checkbox"]:disabled,
  input[type="radio"]:disabled {
    --b: var(--disabled);
    cursor: not-allowed;
    opacity: 0.9;
  }
  input[type="checkbox"]:disabled:checked,
  input[type="radio"]:disabled:checked {
    --b: var(--disabled-inner);
    --bc: var(--border);
  }
  input[type="checkbox"]:disabled + label,
  input[type="radio"]:disabled + label {
    cursor: not-allowed;
  }
  input[type="checkbox"]:hover:not(:checked):not(:disabled),
  input[type="radio"]:hover:not(:checked):not(:disabled) {
    --bc: var(--border-hover);
  }
  input[type="checkbox"]:focus,
  input[type="radio"]:focus {
    box-shadow: 0 0 0 var(--focus);
  }
  input[type="checkbox"]:not(.switch),
  input[type="radio"]:not(.switch) {
    width: 16px;
  }
  input[type="checkbox"]:not(.switch):after,
  input[type="radio"]:not(.switch):after {
    opacity: var(--o, 0);
  }
  input[type="checkbox"]:not(.switch):checked,
  input[type="radio"]:not(.switch):checked {
    --o: 1;
  }
  input[type="checkbox"] + label,
  input[type="radio"] + label {
    font-size: 14px;
    line-height: 21px;
    display: inline-block;
    vertical-align: top;
    cursor: pointer;
    margin-left: 4px;
  }

  input[type="checkbox"]:not(.switch) {
    border-radius: 4px;
  }
  input[type="checkbox"]:not(.switch):after {
    width: 4px;
    height: 6px;
    border: 2px solid var(--active-inner);
    border-top: 0;
    border-left: 0;
    left: 4px;
    top: 2px;
    transform: rotate(var(--r, 20deg));
  }
  input[type="checkbox"]:not(.switch):checked {
    --r: 43deg;
  }
  input[type="checkbox"].switch {
    width: 24px;
    border-radius: 11px;
  }
  input[type="checkbox"].switch:after {
    left: 2px;
    top: 2px;
    border-radius: 50%;
    width: 10px;
    height: 10px;
    background: var(--ab, var(--border));
    transform: translateX(var(--x, 0));
  }
  input[type="checkbox"].switch:checked {
    --ab: var(--active-inner);
    --x: 8px;
  }
  input[type="checkbox"].switch:disabled:not(:checked):after {
    opacity: 0.6;
  }

  input[type="radio"] {
    border-radius: 50%;
  }
  input[type="radio"]:after {
    width: 14px;
    height: 14px;
    border-radius: 50%;
    background: var(--active-inner);
    opacity: 0;
    transform: scale(var(--s, 0.7));
  }
  input[type="radio"]:checked {
    --s: 0.5;
  }
}

/* Custom Scrollbar - Light Mode */
::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}

::-webkit-scrollbar-track {
  background: transparent;
  border-radius: 3px;
}

::-webkit-scrollbar-thumb {
  background: var(--figma-color-bg-tertiary);
  border-radius: 3px;
  transition: background 0.2s ease;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--figma-color-border);
}

/* Hiệu ứng mờ dần scrollbar khi không hover */
.auto-hide-scrollbar {
  overflow: auto;
}

.auto-hide-scrollbar::-webkit-scrollbar-thumb {
  background-color: var(--figma-color-bg-tertiary);
  opacity: 0.3;
  transition: opacity 0.3s ease;
}

.auto-hide-scrollbar:hover::-webkit-scrollbar-thumb {
  opacity: 1;
  background-color: var(--figma-color-border);
}

/* Scrollbar trong Dark Mode */
html.figma-dark ::-webkit-scrollbar-thumb {
  background: var(--figma-color-bg-tertiary);
}

html.figma-dark ::-webkit-scrollbar-thumb:hover {
  background: var(--figma-color-border-strong);
}

html.figma-dark .auto-hide-scrollbar:hover::-webkit-scrollbar-thumb {
  background-color: var(--figma-color-border-strong);
}

/* Ẩn scrollbar khi không sử dụng */
.hide-scrollbar::-webkit-scrollbar {
  width: 0;
  height: 0;
  background: transparent;
}

/* Firefox scrollbar (một số phiên bản Firefox hỗ trợ) */
* {
  scrollbar-width: thin;
  scrollbar-color: var(--figma-color-bg-tertiary) transparent;
}

html.figma-dark * {
  scrollbar-color: var(--figma-color-bg-tertiary) transparent;
}
